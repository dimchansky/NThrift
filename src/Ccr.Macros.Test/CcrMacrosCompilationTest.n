using Nemerle;
using Nemerle.Collections;
using Nemerle.ComputationExpressions;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using NThrift.Ccr;
using NThrift.Ccr.Macros;

using Microsoft.Ccr.Core;

namespace NThrift.Ccr.Macros.Test
{
    public class CcrMacrosCompilationTest
    {
        public SyncValueReturn() : CAsync[int]
        {
            ccrcomp
            {
                def a = 1;
                def b = 2;
                return a + b;
            };
        }
        
        public SyncVoidReturn() : CAsync
        {
            ccrcomp
            {
                def a = 1;
                def b = 2;
                _ = a + b;
                return ();
            }
        }
        
        public SyncReturnComp() : CAsync
        {
            ccrcomp
            {
                returncomp SyncVoidReturn();
            }
        }
        
        dq : DispatcherQueue = DispatcherQueue();
        
        public DoAsyncRead(stream : System.IO.Stream) : CAsync[string]
        {
            ccrcomp(dq)
            {
                mutable buffer = array(42);
                defcomp readed = CAsync.FromBeginEnd(stream.BeginRead(buffer, 0, buffer.Length, _, null),
                                                     stream.EndRead(_));
                return System.Text.Encoding.ASCII.GetString(buffer, 0, readed);
            }
        }
    }
}
