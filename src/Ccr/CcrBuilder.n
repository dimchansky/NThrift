using Nemerle;
using Nemerle.Assertions;
using Nemerle.Collections;
using Nemerle.Text;
using Nemerle.Utility;

using System;
using System.Collections.Generic;
using System.Linq;

using Microsoft.Ccr.Core;

using NThrift.Ccr.Extensions;
using NThrift.Async.Macros;

namespace NThrift.Ccr
{   
    public module CcrBuilder
    {
        public Return[A](value : A) : CAsync[A]
        {
            CAsync.CreateResult(value)
        }
        
        public Return() : CAsync
        {
            CAsync.CreateResult()
        }        
        
        public Fail[A](ex : System.Exception) : CAsync[A]
        {
            CAsync.[A].CreateException(ex);
        }
        
        public Fail(ex : System.Exception) : CAsync
        {
            CAsync.CreateException(ex);
        }
        
        public Bind[A, B]([NotNull]dq : DispatcherQueue, 
                          async : CAsync[A], 
                          f : A -> CAsync[B]) : CAsync[B]
        {
            CAsyncBind(dq; async; f);
        }

        public Bind[A, B]([NotNull]dq : DispatcherQueue, 
                          async : CAsync[A], 
                          f : void -> CAsync[B]) : CAsync[B]
        {
            CAsyncBind(dq; async; f);
        }        
        
        public Bind[A]   ([NotNull]dq : DispatcherQueue, 
                          async : CAsync[A], 
                          f : A -> CAsync) : CAsync
        {
            CAsyncBind(dq; async; f);
        }        
              
        public Bind[A]   ([NotNull]dq : DispatcherQueue, 
                          async : CAsync[A], 
                          f : void -> CAsync) : CAsync
        {
            CAsyncBind(dq; async; f);          
        }        
        
        public Bind[   B]([NotNull]dq : DispatcherQueue, 
                          async : CAsync, 
                          f : void -> CAsync[B]) : CAsync[B]
        {
            CAsyncBind(dq; async; f);      
        }
        
        public Bind      ([NotNull]dq : DispatcherQueue, 
                          async : CAsync, 
                          f : void -> CAsync) : CAsync
        {
            CAsyncBind(dq; async; f);                
        }
    }
}
